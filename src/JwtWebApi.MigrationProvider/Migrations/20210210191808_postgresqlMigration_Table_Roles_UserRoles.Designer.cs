// <auto-generated />
using System;
using JwtWebApi.MigrationProvider.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace JwtWebApi.MigrationProvider.Migrations
{
    [DbContext(typeof(MigrationPostgreSqlContext))]
    [Migration("20210210191808_postgresqlMigration_Table_Roles_UserRoles")]
    partial class postgresqlMigration_Table_Roles_UserRoles
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityByDefaultColumns()
                .HasAnnotation("Relational:Collation", "en_US.utf8")
                .HasAnnotation("Relational:MaxIdentifierLength", 63)
                .HasAnnotation("ProductVersion", "5.0.2");

            modelBuilder.Entity("JwtWebApi.MigrationProvider.Models.AspNetRoles", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .UseIdentityAlwaysColumn();

                    b.Property<string>("RoleName")
                        .HasMaxLength(40)
                        .HasColumnType("character varying(40)");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "RoleName" }, "IX_RoleName")
                        .IsUnique();

                    b.ToTable("AspNetRoles", "aspnet");
                });

            modelBuilder.Entity("JwtWebApi.MigrationProvider.Models.AspNetUserRoles", b =>
                {
                    b.Property<string>("AspNetUserId")
                        .HasColumnType("character varying");

                    b.Property<int?>("RoleId")
                        .HasColumnType("integer");

                    b.HasIndex(new[] { "AspNetUserId" }, "IX_AspNetUserRoles_AspNetUserId");

                    b.HasIndex(new[] { "RoleId" }, "IX_AspNetUserRoles_RoleId");

                    b.ToTable("AspNetUserRoles", "aspnet");
                });

            modelBuilder.Entity("JwtWebApi.MigrationProvider.Models.AspNetUsers", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(128)
                        .HasColumnType("character varying(128)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<bool?>("EmailConfirmed")
                        .HasColumnType("boolean");

                    b.Property<string>("PasswordHash")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<string>("SecurityStamp")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.HasKey("Id");

                    b.ToTable("AspNetUsers", "aspnet");
                });

            modelBuilder.Entity("JwtWebApi.MigrationProvider.Models.Objects", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasComment("Идентификатор")
                        .UseIdentityAlwaysColumn();

                    b.HasKey("Id");

                    b.ToTable("Objects", "content");
                });

            modelBuilder.Entity("JwtWebApi.MigrationProvider.Models.AspNetUserRoles", b =>
                {
                    b.HasOne("JwtWebApi.MigrationProvider.Models.AspNetUsers", "AspNetUser")
                        .WithMany()
                        .HasForeignKey("AspNetUserId")
                        .HasConstraintName("FK_AspNetUsers")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("JwtWebApi.MigrationProvider.Models.AspNetRoles", "Role")
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .HasConstraintName("FK_AspNetRoles")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("AspNetUser");

                    b.Navigation("Role");
                });
#pragma warning restore 612, 618
        }
    }
}
