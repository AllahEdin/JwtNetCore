<#@ template language="C#" debug="True" hostSpecific="True" #>
<#@ output extension=".generated.cs"                        #>

<#@ include file="$(LinqToDBT4PostgreSQLTemplatesPath)LinqToDB.PostgreSQL.Tools.ttinclude" once="true" #>
<#@ include file="$(LinqToDBT4PostgreSQLTemplatesPath)PluralizationService.ttinclude"      once="true" #>
<#
	/*
		1. Create new *.tt file (e.g. MyDatabase.tt) in a folder where you would like to generate your data model
		   and copy content from this file to it. For example:

			MyProject
				DataModels
					MyDatabase.tt

		2. Modify the connection settings below to connect to your database.

		3. Add connection string to the web/app.config file:

			<connectionStrings>
				<add name="MyDatabase" connectionString="Server=MyServer;Port=5432;Database=MyDatabase;User Id=postgres;Password=TestPassword;Pooling=true;MinPoolSize=10;MaxPoolSize=100;Protocol=3;" providerName="PostgreSQL" />
			</connectionStrings>

		4. To access your database use the following code:

			using (var db = new MyDatabaseDB())
			{
				var q =
					from c in db.Customers
					select c;

				foreach (var c in q)
					Console.WriteLine(c.ContactName);
			}

		5. See more at https://linq2db.github.io/articles/T4.html

		IMPORTANT: if running .tt file gives you error like this:
		"error : Failed to resolve include text for file: C:\...\$(LinqToDBT4<DB>TemplatesPath)LinqToDB.<DB>.Tools.ttinclude"
		check tt file properties.
		Custom tool must be set to TextTemplatingFileGenerator, not TextTemplatingFilePreprocessor or any other value.
	*/

	NamespaceName = "JwtWebApi.Link2DbProvider";

	this.GetSchemaOptions.IncludedSchemas = 
		new []{"content", "aspnet"};

	string serverPsqlName = "localhost";
	string portPsqlName = "7777";
	string dataBasePsqlName = "db_test_1";
	string uidPsqlName = "test";
	string passwordPsqlName = "test";

	LoadPostgreSQLMetadata(serverPsqlName, portPsqlName, dataBasePsqlName, uidPsqlName, passwordPsqlName);

	GenerateFindExtensions = false;
	GenerateAssociationExtensions = false;
	GenerateAssociations = false;
	GenerateViews = true;
	GenerateDatabaseName = false;


	foreach (var t in Tables.Values
							.Where(tl => !tl.TableName
											.StartsWith("AspNet", StringComparison.OrdinalIgnoreCase)))
	{
	    if (t.TableName == "__MyMigrationsHistory")
		{
			continue;
		}

		foreach (var c in t.Columns.Values)
		{
			if (c.IsPrimaryKey)
			{
				c.MemberName = "Id";
			}
			else if (c.MemberName == "BirthData")
			{
				c.MemberName = "BirthDate";
			}
		}

		if (t.Columns.Values.Any(t => t.MemberName == "IsDeleted"))
		{
			t.BaseClass = "JwtWebApi.DataProviders.Common.DataObjects.IEntity, JwtWebApi.DataProviders.Common.DataObjects.IDeletable";
		}
		else
		{
			t.BaseClass = "JwtWebApi.DataProviders.Common.DataObjects.IEntity";
		}
		
	}

	GenerateModel();
#>
